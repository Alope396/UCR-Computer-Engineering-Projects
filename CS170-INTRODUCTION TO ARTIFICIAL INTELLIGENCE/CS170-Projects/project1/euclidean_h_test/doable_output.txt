Welcome to Ryan Le (862169037), Aidan Lopez (student id), Brandon Tran (student id), Vy Vo (862140774)'s 8 puzzle solver. 
Select your puzzle: 
1. Default Puzzle 
2. Create Your Own Puzzle
Enter your puzzle, use a zero (0) to represent the blank. Please enter numbers 0-8! No repeating numbers!
Enter the first row, use space or tabs between the numbers. Please enter numbers 0-8! No repeating numbers!
Enter the second row, use space or tabs between the numbers. Please enter numbers 0-8! No repeating numbers!
Enter the third row, use space or tabs between the numbers. Please enter numbers 0-8! No repeating numbers!
value=b; curr_idx=(0, 0); target_idx=(2, 2)
value=1; curr_idx=(0, 1); target_idx=(0, 0)
value=2; curr_idx=(0, 2); target_idx=(0, 1)
value=4; curr_idx=(1, 0); target_idx=(1, 0)
value=5; curr_idx=(1, 1); target_idx=(1, 1)
value=3; curr_idx=(1, 2); target_idx=(0, 2)
value=7; curr_idx=(2, 0); target_idx=(2, 0)
value=8; curr_idx=(2, 1); target_idx=(2, 1)
value=6; curr_idx=(2, 2); target_idx=(1, 2)
Your puzzle: 
b 1 2 
4 5 3 
7 8 6 

value=1; curr_idx=(0, 0); target_idx=(0, 0)
value=2; curr_idx=(0, 1); target_idx=(0, 1)
value=3; curr_idx=(0, 2); target_idx=(0, 2)
value=4; curr_idx=(1, 0); target_idx=(1, 0)
value=5; curr_idx=(1, 1); target_idx=(1, 1)
value=6; curr_idx=(1, 2); target_idx=(1, 2)
value=7; curr_idx=(2, 0); target_idx=(2, 0)
value=8; curr_idx=(2, 1); target_idx=(2, 1)
value=b; curr_idx=(2, 2); target_idx=(2, 2)
Goal State: 
1 2 3 
4 5 6 
7 8 b 

Select search method: 
1. Uniform Cost 
2. A* Misplaced Tile Heuristic
3. A* Euclidean Distance Heuristic
search method=2
1 2 3 
4 5 6 
7 8 b 

set size: 2
set size: 3
The best state to expand with g(n) = 1 and h(n) = 5.236068 is...
1 b 2 
4 5 3 
7 8 6 
Expanding this node...

set size: 3
set size: 4
set size: 5
The best state to expand with g(n) = 2 and h(n) = 4.000000 is...
1 2 b 
4 5 3 
7 8 6 
Expanding this node...

set size: 5
set size: 6
The best state to expand with g(n) = 3 and h(n) = 2.000000 is...
1 2 3 
4 5 b 
7 8 6 
Expanding this node...

set size: 7
set size: 7
set size: 8
The best state to expand with g(n) = 4 and h(n) = 0.000000 is...
1 2 3 
4 5 6 
7 8 b 
Expanding this node...

Goal!!!
To solve this problem, the search algorithm expanded a total of 4 nodes.
The maximum number of nodes in the queue at any one time was 4.
The depth of the goal node was 4.
